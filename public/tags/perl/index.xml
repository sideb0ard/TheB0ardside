<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>perl on The B0ardside</title>
    <link>http://theb0ardside.com/tags/perl/</link>
    <description>Recent content in perl on The B0ardside</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 01 Aug 2015 00:00:00 +0000</lastBuildDate><atom:link href="http://theb0ardside.com/tags/perl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Perl and Portaudio</title>
      <link>http://theb0ardside.com/algorithmicsoundperl/</link>
      <pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://theb0ardside.com/algorithmicsoundperl/</guid>
      <description>Super nice demo of algorithmic sound generation with Perl and Portaudio&amp;hellip;
  from here</description>
    </item>
    
    <item>
      <title>Like Treacle, Solving Perl Net::SFTP Slow Transfer Speeds</title>
      <link>http://theb0ardside.com/liketreaclesolvingperlnetsftpslowtransferspeeds/</link>
      <pubDate>Sun, 19 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>http://theb0ardside.com/liketreaclesolvingperlnetsftpslowtransferspeeds/</guid>
      <description>I&#39;ve been trying to track down problems with really slow network transfer speeds between my servers and several DSPs. I knew it wasn&#39;t local I/O, as we could hit around 60Mb/s to some services, whereas the problematic ones were a sluggish 0.30Mb/s; I knew we weren&#39;t hitting our bandwidth limit, as cacti showed us daily peaks of only around 500Mb/s of our 600Mb/s line. I was working with the network engineer on the other side, running tcpdump captures while uploading a file and analysing that in Wireshark&#39;s IO Graphs - stream looked absolutely fine, no lost packets, big non-changing tcp receive windows.</description>
    </item>
    
    <item>
      <title>building a DEB package from a perl script</title>
      <link>http://theb0ardside.com/buildingadebpackagefromaperlscript/</link>
      <pubDate>Thu, 16 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>http://theb0ardside.com/buildingadebpackagefromaperlscript/</guid>
      <description>I have a speedtest perl script i wrote - nothing complicated, takes a file and uploads it to a remote FTP or SFTP server, while calculating how long, then gives you a a measure of the MB/per second bandwidth between two sites.
I want it available on a selection of machines so it can run from wherever, so I thought i&#39;d package it up as a .DEB file and stick it in our local repo.</description>
    </item>
    
    <item>
      <title>a moose loose aboot this hoose</title>
      <link>http://theb0ardside.com/amooselooseabootthishoose/</link>
      <pubDate>Tue, 24 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>http://theb0ardside.com/amooselooseabootthishoose/</guid>
      <description>Really enjoyed programming along with this perl Moose introduction at Linux Journal - The piece and code are nice and concise.</description>
    </item>
    
    <item>
      <title>CPAN Diff script</title>
      <link>http://theb0ardside.com/cpandiffscript/</link>
      <pubDate>Fri, 16 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>http://theb0ardside.com/cpandiffscript/</guid>
      <description>I put together a quick perl script for comparing installed CPAN modules between two hosts. Find it here.
Quite easy to use:
Usage: ./CompareHostCpanModules.pl login@host1 login@host2
The script ssh&#39;s into both hosts (so it&#39;s easier if you have your ssh-keys setup) and grabs a list of installed CPAN modules and versions, then outputs the differences - it returns two lists - one of modules installed but having different versions, and another list of modules missing from the second host.</description>
    </item>
    
    <item>
      <title>Gen Xen</title>
      <link>http://theb0ardside.com/genxen/</link>
      <pubDate>Mon, 10 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>http://theb0ardside.com/genxen/</guid>
      <description>I&#39;ve been working pretty extensively with Xen and Puppet in my new job, really loving it! I&#39;ve been creating a whole load of Xen hosts, most of which are cloned from an initial image I built using Xen-tools. I&#39;ve just finished a script which is over on my github page, which basically automates what was previously a manual process.
Basically, it copies your existing disk.img and swap.img, generates a new xen.</description>
    </item>
    
  </channel>
</rss>
