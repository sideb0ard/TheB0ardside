<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Virtualization on The B0ardside </title>
    <link>http://theb0ardside.com/tags/virtualization/</link>
    <language>en-us</language>
    <author>Thorsten Sideb0ard</author>
    <rights>Copyleft (c) 1974 - The Future, Thorsten Sideb0ard; nae rights reserved.</rights>
    <updated>2013-04-24 00:00:00 &#43;0000 UTC</updated>
    
    <item>
      <title>PostgreSQL on AWS</title>
      <link>http://theb0ardside.com/postgresqlonaws/</link>
      <pubDate>Wed, 24 Apr 2013 00:00:00 UTC</pubDate>
      <author>Thorsten Sideb0ard</author>
      <guid>http://theb0ardside.com/postgresqlonaws/</guid>
      <description>&lt;p&gt;Excellent video specifically for PostgreSQL on AWS, however the principles are pretty universal information for running anything on AWS -&lt;/p&gt;&lt;p&gt;&lt;iframe width=&#34;590&#34; height=&#34;443&#34; src=&#34;http://www.youtube.com/embed/2fHRX-u1X4A?feature=oembed&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Grizzled</title>
      <link>http://theb0ardside.com/grizzled/</link>
      <pubDate>Tue, 09 Apr 2013 00:00:00 UTC</pubDate>
      <author>Thorsten Sideb0ard</author>
      <guid>http://theb0ardside.com/grizzled/</guid>
      <description>&lt;p&gt;yow, the latest &lt;a href=&#34;http://www.openstack.org/software/&#34; title=&#34;OpenStack&#34; target=&#34;_blank&#34;&gt;OpenStack&lt;/a&gt; release is looking rather slick..&lt;/p&gt;&lt;p&gt;&lt;iframe width=&#34;590&#34; height=&#34;332&#34; src=&#34;http://www.youtube.com/embed/p4eW78gHfCg?feature=oembed&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gen Xen</title>
      <link>http://theb0ardside.com/genxen/</link>
      <pubDate>Mon, 10 Oct 2011 00:00:00 UTC</pubDate>
      <author>Thorsten Sideb0ard</author>
      <guid>http://theb0ardside.com/genxen/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;&#34; width=&#34;600&#34; src=&#34;http://www.just-marvel-x-men.com/image-files/astonishing-x-men-1-100k.jpg&#34; title=&#34;Xen&#34; class=&#34;alignnone&#34;  /&gt;&lt;/p&gt;&lt;p&gt;I&#39;ve been working pretty extensively with Xen and Puppet in my new job, really loving it! I&#39;ve been creating a whole load of Xen hosts, most of which are cloned from an initial image I built using Xen-tools. I&#39;ve just finished a script which is over on &lt;a href=&#34;https://github.com/sideb0ard/GenXen&#34; title=&#34;GitHub&#34; target=&#34;_blank&#34;&gt;my github page&lt;/a&gt;, which basically automates what was previously a manual process.&lt;/p&gt;&lt;p&gt;Basically, it copies your existing disk.img and swap.img, generates a new xen.cfg file based on some interactive input (desired hostname, IP, memory and number of vCPUs) plus a random Xen mac address, then mounts the disk.img file and changes some appropriate system files - /etc/hostname, hosts, and network/interfaces.&lt;/p&gt;&lt;p&gt;All quite simple and straight forward, but quite nice to have automated.&lt;/p&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/sideb0ard/GenXen&#34; title=&#34;GenXen&#34; target=&#34;_blank&#34;&gt;GenXen&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Here&#39;s the README:&lt;/p&gt;&lt;p&gt;GenXen #&lt;br /&gt;#############################&lt;/p&gt;&lt;p&gt;A script for automating Xen VM deployment.&lt;/p&gt;&lt;p&gt;It requires that you have a base disk.img and swap.img already created.&lt;br /&gt;I created mine with:&lt;br /&gt;xen-create-image -pygrub -size=50Gb -swap=9Gb -vcpus=2 -memory 6Gb -dist=squeeze -dhcp -passwd -dir=/var/virt-machines -hostname=xen-squeeze-base&lt;/p&gt;&lt;p&gt;Fill in some of the variables at the top of GenXen.pl before running, then simply:&lt;br /&gt;./GenXen.pl&lt;/p&gt;&lt;p&gt;The interactive part will ask for hostname, memory size, vCPUs, IP address, then generate a unique Xen mac address, and write these all to a xen config file which will be saved in /etc/xen/&lt;/p&gt;&lt;p&gt;It&#39;ll copy your disk.img and swap.img to destination dir, mount the disk.img and create appropriate files for:&lt;br /&gt;/etc/hostname&lt;br /&gt;/etc/hosts&lt;br /&gt;/etc/network/interfaces &lt;/p&gt;&lt;p&gt;After that you should be good to launch with:&lt;/p&gt;&lt;p&gt;xm create -c /etc/xen/whatever-your-hostname-is.cfg&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Vagrant and Chef setup</title>
      <link>http://theb0ardside.com/vagrantandchefsetup/</link>
      <pubDate>Fri, 05 Aug 2011 00:00:00 UTC</pubDate>
      <author>Thorsten Sideb0ard</author>
      <guid>http://theb0ardside.com/vagrantandchefsetup/</guid>
      <description>&lt;p&gt;I&#39;ve been reading through ThoughtWorks&#39; latest &amp;#8216;&lt;a href=&#34;http://www.thoughtworks.com/radar&#34; title=&#34;radar&#34; target=&#34;_blank&#34;&gt;technology radar&lt;/a&gt;&amp;#8216; which led me to look up &lt;a href=&#34;http://vagrantup.com/&#34; title=&#34;Vagrant&#34; target=&#34;_blank&#34;&gt;Vagrant&lt;/a&gt;, one of the tools they list as worth exploring.&lt;/p&gt;&lt;p&gt;Vagrant is a framework for building and deploying Virtual Machine environments, using Oracle VirtualBox for the actual VMs and utilizing Chef for configuration management.  &lt;/p&gt;&lt;p&gt;Watching through this intro video:&lt;/p&gt;&lt;p&gt;http://vimeo.com/9976342&lt;/p&gt;&lt;p&gt;i was quite intrigued as it is very similar to what i was looking to achieve earlier when i was &lt;a href=&#34;http://www.theb0ardside.com/?p=22&#34; title=&#34;Xen and Puppet&#34; target=&#34;_blank&#34;&gt;experimenting with installing Xen and configuring with Puppet.&lt;/a&gt;&lt;/p&gt;&lt;p&gt;So here&#39;s what I experienced during the setup of Vagrant on my Macbook - I decided to start with a simple Chef install to familiarise myself with Chef itself and it&#39;s own requirements CouchDB, RabbitMQ and Solr, mostly by following &lt;a href=&#34;http://wiki.opscode.com/display/chef/Manual+Chef+Server+Configuration&#34; title=&#34;Chef Manual Install OS X&#34; target=&#34;_blank&#34;&gt;these instructions&lt;/a&gt; - &lt;/p&gt;&lt;p&gt;&lt;strong&gt;-CHEF INSTALL-&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;sudo gem install chef&lt;br /&gt;sudo gem install ohai&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Chef uses couchDB as it&#39;s datastore, so we need to install it using the instructions &lt;a href=&#34;http://wiki.apache.org/couchdb/Installing_on_OSX&#34; title=&#34;CouchDB install OS X&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&lt;strong&gt;brew install couchdb&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The instructions I list above also contains steps to install a couchDB user and set it up as a daemon. They didn&#39;t work for me, and after 30mins of troubleshooting, i gave up and went with the simpler option of running it under my own user - in production this will be running on a Linux server rather than my Macbook, so it seemed fair enough -&lt;/p&gt;&lt;p&gt;&lt;strong&gt;cp /usr/local/Cellar/couchdb/1.1.0/Library/LaunchDaemons/org.apache.couchdb.plist ~/Library/LaunchAgents/&lt;/p&gt;&lt;p&gt;launchctl load -w ~/Library/LaunchAgents/org.apache.couchdb.plist&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Check its running okay by going to&lt;br /&gt;&lt;a href=&#34;http://127.0.0.1:5984/&#34; title=&#34;Localhost&#34; target=&#34;_blank&#34;&gt;http://127.0.0.1:5984/&lt;/a&gt;&lt;/p&gt;&lt;p&gt;which should provide something akin to :&lt;br /&gt;&lt;strong&gt;{&amp;#8220;couchdb&amp;#8221;:&amp;#8221;Welcome&amp;#8221;,&amp;#8221;version&amp;#8221;:&amp;#8221;1.1.0&amp;#8243;}&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;- INSTALL RABBITMQ -&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;brew install rabbitmq&lt;br /&gt;/usr/local/sbin/rabbitmq-server -detached&lt;/p&gt;&lt;p&gt;sudo rabbitmqctl add_vhost /chef&lt;br /&gt;sudo rabbitmqctl add_user chef testing&lt;br /&gt;sudo rabbitmqctl set_permissions -p /chef chef &amp;#8220;.*&amp;#8221; &amp;#8220;.*&amp;#8221; &amp;#8220;.*&amp;#8221;&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Ok, Gettin&#39; back to my mission, break out the whipped cream and the cherries, then I go through all the fly positions - oh, wrong mission! &lt;/p&gt;&lt;p&gt;Ok..&lt;/p&gt;&lt;p&gt;&lt;strong&gt;brew install gecode&lt;br /&gt;brew install solr&lt;/p&gt;&lt;p&gt;sudo gem install chef-server chef-server-api chef-server chef-solr&lt;br /&gt;sudo gem install chef-server-webui&lt;br /&gt;sudo chef-solr-installer&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Setup a conf file -&lt;br /&gt;&lt;strong&gt;sudo mkdir /etc/chef&lt;br /&gt;sudo vi /etc/chef/server.rb&lt;/strong&gt; - paste in the example from:&lt;/p&gt;&lt;p&gt;&lt;a href=&#34;http://wiki.opscode.com/display/chef/Manual+Chef+Server+Configuration&#34; title=&#34;chef conf&#34; target=&#34;_blank&#34;&gt;http://wiki.opscode.com/display/chef/Manual+Chef+Server+Configuration&lt;/a&gt; - making the appropriate changes for your FQDN&lt;/p&gt;&lt;p&gt;At this point, the above instructions ask you to start the indexer however the instructions haven&#39;t been updated to reflect changes to Chef version 0.10.2 in which chef-solr-indexer has been replaced with chef-expander&lt;/p&gt;&lt;p&gt;So, instead of running:&lt;br /&gt;&lt;strong&gt;sudo chef-solr-indexer &lt;/strong&gt;&lt;/p&gt;&lt;p&gt;you instead need to run:&lt;br /&gt;&lt;strong&gt;sudo chef-expander -n1 -d&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Next i tried&lt;br /&gt;&lt;strong&gt;sudo chef-solr&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;which ran into&lt;br /&gt;&lt;em&gt;&amp;#8220;`configure_chef&#39;: uninitialized constant Chef::Application::SocketError (NameError)&amp;#8221;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;i had to create an &lt;strong&gt;/etc/chef/solr.rb&lt;/strong&gt; file and simply add this to the file:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;require &amp;#8216;socket&#39;&lt;/strong&gt; &lt;/p&gt;&lt;p&gt;startup now worked -&lt;br /&gt;if you want to daemonize it, use:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;sudo chef-solr -d&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Next start Chef Server with:&lt;br /&gt;&lt;strong&gt;sudo chef-server -N -e production -d&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;and finally:&lt;br /&gt;&lt;strong&gt;sudo chef-server-webui -p 4040 -e production&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Now you should be up and running - you need to configure the command client &amp;#8216;Knife&#39; follwing the instructions &lt;a href=&#34;http://wiki.opscode.com/display/chef/Manual+Chef+Server+Configuration&#34; title=&#34;Knife setup&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; - under the section &amp;#8216;&lt;strong&gt;Configure the Command Line Client&lt;/strong&gt;&amp;#8216;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;mkdir -p ~/.chef&lt;br /&gt;sudo cp /etc/chef/validation.pem /etc/chef/webui.pem ~/.chef&lt;br /&gt;sudo chown -R $USER ~/.chef&lt;/p&gt;&lt;p&gt;knife configure -i&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;(follow the instructions at the link - you only need to change the location of the two pem files you copied above)&lt;/p&gt;&lt;p&gt;Ok, so hopefully you&#39;re at the same place as me with this all working at least as far as being able to log into CouchDB, and verifying that Chef/Knife are both working.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;- VAGRANT SETUP -&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Now, onward with the original task of Vagrant setup&amp;#8230;&lt;br /&gt;Have a read over the &lt;a href=&#34;http://vagrantup.com/docs/getting-started/index.html &#34; title=&#34;Vagrant Getting Started&#34; target=&#34;_blank&#34;&gt;getting started guide:&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Install VirtualBox - download from &lt;a href=&#34;http://www.virtualbox.org/wiki/Downloads&#34; title=&#34;VirtualBox&#34; target=&#34;_blank&#34;&gt;http://www.virtualbox.org/wiki/Downloads&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Run the installer, which should all work quite easily. Next..&lt;/p&gt;&lt;p&gt;&lt;strong&gt;gem install vagrant&lt;/p&gt;&lt;p&gt;mkdir vagrant_guide&lt;br /&gt;cd vagrant_guide/&lt;br /&gt;vagrant init&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;this creates the base Vagrantfile, which the documentation compares to a Makefile, basically a reference file for the project to work with.&lt;/p&gt;&lt;p&gt;Setup our first VM -&lt;br /&gt;&lt;strong&gt;vagrant box add lucid32 http://files.vagrantup.com/lucid32.box&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;This is downloaded and saved in ~/.vagrant.d/boxes/ &lt;/p&gt;&lt;p&gt;edit the Vagrantfile which was created and change the &amp;#8220;box&amp;#8221; entry to be &amp;#8220;lucid32&amp;#8243;, the name of the file we just saved. &lt;/p&gt;&lt;p&gt;Bring it online with:&lt;br /&gt;&lt;strong&gt;vagrant up&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;then ssh into with&lt;br /&gt;&lt;strong&gt;vargrant ssh&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Ace, that worked quite easily. After a little digging around, I  logged out and tore the machine down again with&lt;br /&gt;&lt;strong&gt;vagrant destroy&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;- TYING IT ALL TOGETHER -&lt;/strong&gt;&lt;br /&gt;Now we need to connect our Vagrant install with our Chef server&lt;/p&gt;&lt;p&gt;First, clone the Chef repository with:&lt;br /&gt;&lt;strong&gt;git clone git://github.com/opscode/chef-repo.git &lt;/strong&gt;&lt;/p&gt;&lt;p&gt;add this dir to your &lt;strong&gt;~/.chef/knife.rb&lt;/strong&gt; file&lt;br /&gt;i.e&lt;br /&gt;&lt;strong&gt;cookbook_path           [&#34;/Users/thorstensideboard/chef-repo/cookbooks&#34;]&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Download the Vagrant cookbook they use in their examples -&lt;/p&gt;&lt;p&gt;&lt;strong&gt;wget http://files.vagrantup.com/getting_started/cookbooks.tar.gz&lt;br /&gt;tar xzvf cookbooks.tar.gz&lt;br /&gt;mv cookbooks/* chef-repo/cookbooks/&lt;br /&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Add it to our Chef server using Knife:&lt;br /&gt;&lt;strong&gt;knife cookbook upload -a&lt;/strong&gt;&lt;br /&gt;(knife uses the cookbook_path we setup above)&lt;/p&gt;&lt;p&gt;If you browse to your localhost at&lt;br /&gt;&lt;strong&gt;http://sbd-ioda.local:4040/cookbooks/&lt;/strong&gt;&lt;br /&gt;you should see the three new cookbooks which have been added.&lt;/p&gt;&lt;p&gt;Now to edit Vagrantfile and add your Chef details:&lt;br /&gt;&lt;code&gt;&lt;br /&gt;Vagrant::Config.run do |config|&lt;/p&gt;&lt;p&gt;    config.vm.box = &#34;lucid32&#34;&lt;/p&gt;&lt;p&gt;    config.vm.provision :chef_client do |chef|&lt;/p&gt;&lt;p&gt;    chef.chef_server_url = &#34;http://SBD-IODA.local:4000&#34;&lt;br /&gt;    chef.validation_key_path = &#34;/Users/thorsten/.chef/validation.pem&#34;&lt;br /&gt;    chef.add_recipe(&#34;vagrant_main&#34;)&lt;br /&gt;    chef.add_recipe(&#34;apt&#34;)&lt;br /&gt;    chef.add_recipe(&#34;apache2&#34;)&lt;/p&gt;&lt;p&gt;    end&lt;br /&gt;end&lt;br /&gt;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;I tried to load this up with&lt;br /&gt;&lt;strong&gt;vagrant up&lt;/strong&gt;&lt;br /&gt;however received:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&amp;#8220;[default] [Fri, 05 Aug 2011 09:27:07 -0700] INFO: *** Chef 0.10.2 ***&lt;br /&gt;: stdout&lt;br /&gt;[default] [Fri, 05 Aug 2011 09:27:07 -0700] INFO: Client key /etc/chef/client.pem is not present - registering&lt;br /&gt;: stdout&lt;br /&gt;[default] [Fri, 05 Aug 2011 09:27:28 -0700] FATAL: Stacktrace dumped to /srv/chef/file_store/chef-stacktrace.out&lt;br /&gt;: stdout&lt;br /&gt;[default] [Fri, 05 Aug 2011 09:27:28 -0700] FATAL: SocketError: Error connecting to http://SBD-IODA.local:4000/clients - getaddrinfo: Name or service not known&amp;#8221;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;I figured this was a networking issue, and yeah, within the VM it has no idea of my Macbook&#39;s local hostname, which i fixed by editing its /etc/hosts file and manually adding it.&lt;/p&gt;&lt;p&gt;Upon issuing a&lt;br /&gt;&lt;strong&gt;vagrant reload&lt;/strong&gt;, boom! you can see the Vagrant host following the recipes and loading up a bunch of things including apache2&lt;/p&gt;&lt;p&gt;However at this point, you can still only access it&#39;s webserver from within the VM, so in order to access it from our own desktop browser, we can add the following line to the Vagrantfile:&lt;br /&gt;&lt;strong&gt;config.vm.forward_port(&amp;#8220;web&amp;#8221;, 80, 8080)&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;After another reload, you should now be able to connect to localhost:8080 and access your new VM&#39;s apache host.&lt;/p&gt;&lt;p&gt;In order to use this setup in any sort of dev environment will still need a good deal more work, but for the moment, this should be enough to get you up and running and able to explore both Vagrant and Chef. &lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
